#---------------------------------------------------#
## 配置文件需要放置在 $HOME/.config/clash/config.yml
## 
## 如果您不知道如何操作，请参阅 SS-Rule-Snippet 的 Wiki：
## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)
#---------------------------------------------------#

mixed-port: 7890

# Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)
# redir-port: 7892

# 允许局域网的连接（可用来共享代理）
allow-lan: true
# bind-address: "*"
# 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数：
# "*"                           绑定所有的 IP 地址
# 192.168.122.11                绑定一个的 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]"   绑定一个 IPv6 地址

# 规则模式：Rule（规则） / Global（全局代理）/ Direct（全局直连）
mode: Rule

# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# clash 的 RESTful API
external-controller: 127.0.0.1:9090

# 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `${API}/ui`
# 参数应填写配置目录的相对路径或绝对路径。
# external-ui: folder

# RESTful API 的口令 (可选)
# secret: ""

# 本地 SOCKS5 / HTTP(S) 服务认证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# # 实验性功能 hosts, 支持通配符 (例如 *.clash.dev 甚至 *.foo.*.example.com)
# # 静态的域名 比 通配域名 具有更高的优先级 (foo.example.com 优先于 *.example.com)
# # 注意: hosts 在 fake-ip 模式下不生效
# hosts:
#   # 致云科技
#   'rancher.cloud-cloud.com': 10.101.1.141
#   'harbor.cloud-cloud.com': 10.101.1.141
#   'nexus.cloud-cloud.com': 10.101.1.141
#   'metersphere.cloud-cloud.com': 10.101.1.141
#   # Added by Docker Desktop
#   # To allow the same kube context to work on the host and the container:
#   'kubernetes.docker.internal': 127.0.0.1
#   'confluence.ecloud.com': 10.0.31.61

# DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭)
dns:
  enable: false
  listen: 0.0.0.0:53
  ipv6: true # 当此选项为 false 时, AAAA 请求将返回空

  # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名
  # 仅填写 DNS 服务器的 IP 地址
  default-nameserver:
    - 114.114.114.114
    - 223.5.5.5
  enhanced-mode: redir-host # 或 fake-ip
  # fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 (CIDR 形式)
  use-hosts: true # 查询 hosts 并返回 IP 记录

  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  # fake-ip-filter:
  #   # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充
  #   # === LAN ===
  #   - '*.lan'
  #   # === Linksys Wireless Router ===
  #   - '*.linksys.com'
  #   - '*.linksyssmartwifi.com'
  #   # === Apple Software Update Service ===
  #   - 'swscan.apple.com'
  #   - 'mesu.apple.com'
  #   # === Windows 10 Connnect Detection ===
  #   - '*.msftconnecttest.com'
  #   - '*.msftncsi.com'
  #   # === NTP Service ===
  #   - 'time.*.com'
  #   - 'time.*.gov'
  #   - 'time.*.edu.cn'
  #   - 'time.*.apple.com'
# 
  #   - 'time1.*.com'
  #   - 'time2.*.com'
  #   - 'time3.*.com'
  #   - 'time4.*.com'
  #   - 'time5.*.com'
  #   - 'time6.*.com'
  #   - 'time7.*.com'
# 
  #   - 'ntp.*.com'
  #   - 'ntp.*.com'
  #   - 'ntp1.*.com'
  #   - 'ntp2.*.com'
  #   - 'ntp3.*.com'
  #   - 'ntp4.*.com'
  #   - 'ntp5.*.com'
  #   - 'ntp6.*.com'
  #   - 'ntp7.*.com'
# 
  #   - '*.time.edu.cn'
  #   - '*.ntp.org.cn'
  #   - '+.pool.ntp.org'
# 
  #   - 'time1.cloud.tencent.com'
  #   # === Music Service ===
  #   ## NetEase
  #   - '+.music.163.com'
  #   - '*.126.net'
  #   ## Baidu
  #   - 'musicapi.taihe.com'
  #   - 'music.taihe.com'
  #   ## Kugou
  #   - 'songsearch.kugou.com'
  #   - 'trackercdn.kugou.com'
  #   ## Kuwo
  #   - '*.kuwo.cn'
  #   ## JOOX
  #   - 'api-jooxtt.sanook.com'
  #   - 'api.joox.com'
  #   - 'joox.com'
  #   ## QQ
  #   - '+.y.qq.com'
  #   - '+.music.tc.qq.com'
  #   - 'aqqmusic.tc.qq.com'
  #   - '+.stream.qqmusic.qq.com'
  #   ## Xiami
  #   - '*.xiami.com'
  #   ## Migu
  #   - '+.music.migu.cn'
  #   # === Game Service ===
  #   ## Nintendo Switch
  #   - '+.srv.nintendo.net'
  #   ## Sony PlayStation
  #   - '+.stun.playstation.net'
  #   ## Microsoft Xbox
  #   - 'xbox.*.microsoft.com'
  #   - '+.xboxlive.com'
  #   # === Other ===
  #   ## QQ Quick Login
  #   - 'localhost.ptlogin2.qq.com'
  #   ## Golang
  #   - 'proxy.golang.org'
  #   ## STUN Server
  #   - 'stun.*.*'
  #   - 'stun.*.*.*'

  # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # Clash 会使用最先获得的解析记录回复 DNS 请求
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query

  # 当 fallback 参数被配置时, DNS 请求将同时发送至上方 nameserver 列表和下方 fallback 列表中配置的所有 DNS 服务器.
  # 当解析得到的 IP 地址的地理位置不是 CN 时，clash 将会选用 fallback 中 DNS 服务器的解析结果。
  fallback:
    - https://dns.google/dns-query
    - https://cloudflare-dns.com/dns-query

  # 如果使用 nameserver 列表中的服务器解析的 IP 地址在下方列表中的子网中，则它们被认为是无效的，
  # Clash 会选用 fallback 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 true 且 IP 地址的地理位置为 CN 时，
  # Clash 会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 false, 如果解析结果不在 fallback-filter.ipcidr 范围内，
  # Clash 总会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 采取以上逻辑进行域名解析是为了对抗 DNS 投毒攻击。
  fallback-filter:
    geoip: false
    ipcidr:
      - 240.0.0.0/4
      - 0.0.0.0/32
    # domain:
    #   - '+.google.com'
    #   - '+.facebook.com'
    #   - '+.youtube.com'

      
# 1. clash DNS 请求逻辑：
#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内，解析最快的结果。
#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
#
#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
# 
# 2. clash DNS 配置注意事项：
#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
# 
# 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。
